# Editor関連
- regexp-left: ^(?P<body>e) +(?P<query>.*)$
  cmd-groups:
    - stmt: fd -t f -H -E ".git" 2>/dev/null
      after: awk '{print $0}'
  fuzzy-finder-cmd: fzf -0 -1 --ansi -q "<query>" --preview 'head -20 {}'
  buffer-left: "<body> "
  buffer-right: "[]"

# git関連 (alias版)
- regexp-left: ^(?P<body>grb) +(?P<query>.*)$
  cmd-groups:
    - stmt: git branch --format="%(refname:short)" --all 2>/dev/null
      after: awk '{print $0}'
  fuzzy-finder-cmd: fzf -0 -1 --ansi -q "<query>" --preview='git log --oneline --graph --decorate --color -n20 {}'
  buffer-left: "<body> "
  buffer-right: "[]"
- regexp-left: ^(?P<body>gsw) +(?P<query>.*)$
  cmd-groups:
    - stmt: git branch --format="%(refname:short)" --all 2>/dev/null
      after: awk '{print $0}' | sed -e "s|^origin/||"
  fuzzy-finder-cmd: fzf -0 -1 --ansi -q "<query>" --preview='git log --oneline --graph --decorate --color -n20 {}'
  buffer-left: "<body> "
  buffer-right: "[]"
- regexp-left: ^(?P<body>(g(it)? push [^ ]+|gb -(d|D))) +(?P<query>.*)$
  cmd-groups:
    - stmt: git branch --format="%(refname:short)" 2>/dev/null
      after: awk '{print $0}'
  fuzzy-finder-cmd: fzf -0 -1 --ansi -q "<query>" --preview='git log --oneline --graph --decorate --color -n20 {}'
  buffer-left: "<body> "
  buffer-right: "[]"

# 汎用
- regexp-left: ^(?P<body>.*?)(?P<path>~{0,1}([0-9A-Za-z_\-.]*/)+)?(?P<query>[0-9A-Za-z_\-.]*)$
  cmd-groups:
    - stmt: \ls -AlFG <path> | tail -n +2 | grep "<query>"
      after: awk '{print $9}'
  fuzzy-finder-cmd: fzf -0 -1 -n9 -m --ansi --no-sort
  buffer-left: <body><path>
  buffer-right: "[]"
